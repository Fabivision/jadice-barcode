name: Java Continuous Delivery

on: 
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    
    ## Build-Number
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v1 
      with:
        token: ${{secrets.GITHUB_TOKEN}}
    - name: Print new build number
      run: echo Build number is $BUILD_NUMBER

    ## Enable Caching
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    ## Configure JDK 1.8
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    ## Build with maven
    - name: Set version
      if: github.ref == 'refs/heads/master'
      run: |
        export project_version=$(mvn help:evaluate -N -Dexpression=project.version | grep -v '\[' | tail -1 | sed -r -e 's/[-.](snapshot|local)$//i' -e 's/\s+//g')
        export release_version=${project_version}.${{ steps.buildnumber.outputs.build_number }}
        echo Truncated version found to be ${project_version}, releasing as ${release_version}
        mvn versions:set -DnewVersion=${release_version} 
        echo ::set-env name=RELEASE_VERSION::"${release_version}"

    - name: Perform build
      run: mvn -B package --file pom.xml
      
    ## Deploy to maven central
    - name: Deploy on maven central
      run: mvn deploy --settings .maven.xml -DskipTests=true -B -U -Prelease

    ## Notify Slack
    - name: Notify slack
      uses: hennejg/slack-build-notifier@v1.1
      with:
        username: GitHub
        icon_emoji: octocat
        channel: 'ci-github-projekte'
        text: Released new version ${{ RELEASE_VERSION }} ${{ release_version }} of ${{ github.repository }} to maven central
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()
